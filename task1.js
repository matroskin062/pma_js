/* 
  будет true, потому что оба операнда 
  преобразуются в строки и получится 22 == 22;
 */
console.log(2 + '2' == '2' + 2); //true

// выведется false, потому что 23 != 32
console.log(2 + '3' == '3' + 2); //false

/* 
  будет false, так как левая часть будет преобразована 
  в строку, а правая в число, в итоге получится 32 != 5 
*/
console.log('3' + '2' == 3 + 2); //false

/* 
  выражение будет true, потому что оба операнда 
  будут приведены к строке и получится 32 == 32 
*/
console.log('3' + '2' == '3' + 2); //true

// это выражение ложно, так как 32 != 23
console.log('3' + '2' == 2 + '3'); //false

// тут происходит явное преобразование строки '3' к числу, в итоге получаем 5 == 5
console.log(2 + Number('3') == Number('3') + 2); //true

//Оператор деления преобразовывает оба операнда к числу, результат будет 2
console.log(12 / '6'); //2

/*
  сложение выполняется слева направо:
  1. 'number' + 15 = 'number15'
  2. 'number15' + 3 = 'number153' 
*/
console.log('number' + 15 + 3); //number153

/* 
  при сравнении [1] и null приводится к числу
  при использовании оператора сравнения null становится 0
  1 > 0 => true
*/
console.log([1] > null); //true

/* 
  Унарный плюс который находится возле строки 'bar' имеет больший приоритет, чем сложение
  Унарный плюс пытается привести 'bar' к числу, но это невозможно в итоге получаем NaN
  Далее происходит сложение 'foo' + NaN, результатом будет строка 'fooNaN'
*/
console.log('foo' + +'bar'); //fooNaN

/* 
  При сравнение оба операнда приводятся к числу
  Строка 'true' не может быть преобразована в число, по этому она станет NaN,
  а булево значение true будет преобразовано в 1
  NaN == 1 => false
*/
console.log('true' == true); //false

//Всё точно так же, как в примере выше, но false станет 0
console.log(false == 'false'); //false

//Значение null может быть равно только null и undefined, по-этому в результате будет false
console.log(null == ''); //false

/*
  Оператор ! сначала приводит значение к логическому типу, а потом возвращает противоположное значение
  !!'false' => false => true и !!'true' => false => true
  true == true => true
*/
console.log(!!'false' == !!'true'); // true

console.log(['x'] == 'x');
